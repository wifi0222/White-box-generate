# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import a as module_0


def test_case_0():
    list_0 = []
    tuple_0 = (list_0,)
    with pytest.raises(ValueError):
        module_0.calculate(tuple_0, tuple_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "subtract"
    module_0.calculate(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "add"
    none_type_0 = None
    module_0.calculate(none_type_0, none_type_0, str_0)


def test_case_3():
    str_0 = "divide"
    complex_0 = 2499.73 + 3120.93395j
    var_0 = module_0.calculate(complex_0, complex_0, str_0)
    assert var_0 == (1 + 0j)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "multiply"
    module_0.calculate(str_0, str_0, str_0)


def test_case_5():
    str_0 = "divide"
    complex_0 = 2499.2778281278856 + 3120.93395j
    var_0 = module_0.calculate(complex_0, complex_0, str_0)
    assert var_0 == (1 + 0j)
    var_1 = module_0.calculate(var_0, var_0, str_0)
    assert var_1 == (1 + 0j)
    bool_0 = False
    with pytest.raises(ValueError):
        module_0.calculate(var_0, bool_0, str_0)
